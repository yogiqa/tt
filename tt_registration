package user_registration;

import org.testng.annotations.Test;
import org.testng.annotations.BeforeTest;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import org.apache.commons.io.FileUtils;
import org.openqa.selenium.By;
import org.openqa.selenium.Cookie;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.support.ui.Select;
import org.testng.annotations.AfterTest;


public class talent_registration {
    int num = 1;
    WebDriver driver;
    WebElement delete_cookies;
    @Test (priority =1)
  public void testcase1() {
      driver.navigate().to("http://talentrack.in/register");
      String pge_title = driver.findElement(By.xpath("/html/body/section/div/div/h3")).getText();
      System.out.println("Page title is : " + pge_title);
  }
    @Test (priority =2)
  public void testcaes2(){
        Select dropdown = new Select(driver.findElement(By.cssSelector("#cat_id.req")));
        dropdown.selectByIndex(1);
        dropdown.getFirstSelectedOption().getText();
        System.out.println(dropdown);
  }
    @Test (priority =3)
  public void testcase3() throws Exception{
        String timeStamp = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss").format(new Date());
        String email= "test"+ timeStamp + "@test.com";
        driver.findElement(By.id("email")).sendKeys(email);
        System.out.println("Talent email address is" +email);
  }
    @Test(priority=4)
    public void testcase4(){
        // Select talent gender
        Select gender = new Select(driver.findElement(By.id("sex")));
        gender.selectByVisibleText("Male");
    }
    @Test (priority=5)
    public void testcase5(){
        // Select Date of birth
        Select dd = new Select(driver.findElement(By.id("day_select")));
        dd.selectByValue("12");
        dd.getFirstSelectedOption().getText();
        System.out.println(dd);
        Select mm = new Select(driver.findElement(By.id("month_select")));
        mm.selectByVisibleText("January");
        Select yy = new Select(driver.findElement(By.id("year_select")));
        yy.selectByValue("1988");
    }
    @Test (priority=6)
    public void testcase6(){
        // Verify the mobile and should not accept more than 10 characters
        String mobilenumber="9958833582";
        String wrongmobilenumber = "1231231231231";
        WebElement mobile_number = driver.findElement(By.id("phone"));
        if(mobilenumber.length()==10){
            mobile_number.sendKeys(mobilenumber);
            System.out.println("OK"+ mobilenumber);
        }
        else{
            System.out.println("Wrong Mobile number");
        }
        // Verify that mobile number should not less than or greater than 10 characters
        driver.findElement(By.id("phone")).clear();
        driver.findElement(By.id("phone")).sendKeys("1231231231231");
        if(wrongmobilenumber.length()<10 || wrongmobilenumber.length()>10){
            System.out.println("Wrong mobile number"+ wrongmobilenumber);
        }
        else{
            System.out.println("Mobile number Ok");
        }
        // Verify that mobile number should not accept alphanumeric characters
        driver.findElement(By.id("phone")).clear();
        driver.findElement(By.id("phone")).sendKeys("1231231231231");
        if(Constants.MOBILE_NUMBER.matches("[A-z],[@],[&]")){
            System.out.println("Wrong mobile number and should not contains special characters" + Constants.WRONG_MOBILE_NUMBER);           
        }
        else{
            System.out.println("Correct number" + Constants.MOBILE_NUMBER);
        }
       
        // Verify that all characters and more than 4 in mobile number should not be zero.
        driver.findElement(By.id("phone")).clear();
        driver.findElement(By.id("phone")).sendKeys(Constants.ZERO_MOBILE);
        if(Constants.ZERO_MOBILE.matches("(.*?0.*?){5}") || Constants.ZERO_MOBILE.matches("(.*?0.*?){10}") ){
            System.out.println("Mobile number should not contains all zero values");
            driver.findElement(By.id("phone")).clear();
        }
        else{
            System.out.println("Ok, zero number validation failed");
        }
    }
    @Test (priority=7)
    public void testcase7(){
        // verify message after entering correct OTP
        driver.findElement(By.id("phone")).sendKeys(Constants.MOBILE_NUMBER);
        driver.findElement(By.id("btn_verify")).click();
        driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
        WebElement otp_value = driver.findElement(By.xpath("//*[@id='verifyOTP_register']//*[@id='otp']"));
        otp_value.sendKeys(Constants.MOBILE_OTP);
        driver.findElement(By.xpath("//*[@id='verifyOTP_register']//*[@type='submit']")).click();
        String otp_success_msg = driver.findElement(By.className("opt_success")).getText();
        System.out.println(otp_success_msg);
        // Verify OTP should not accept more than 6 characters value
        String otp = Constants.WRONG_OTP;       
        driver.findElement(By.id("phone")).sendKeys("9958833582");
        driver.findElement(By.id("btn_verify")).click();
        driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
        WebElement otp1_value = driver.findElement(By.xpath("//*[@id='verifyOTP_register']//*[@id='otp']"));
        otp1_value.sendKeys("1212121212");
        driver.findElement(By.xpath("//*[@id='verifyOTP_register']//*[@type='submit']")).click();
        if(otp.length()>6){
            System.out.println("Incorrect otp");
        }
        WebElement otp_reset = driver.findElement(By.xpath("//*[@id='verifyOTP_register']//*[@id='otp']"));
        otp_reset.clear();
        // Verify OTP should be resend while hit reset button
        Otp_Verifiction mobile_otp = new Otp_Verifiction();
        mobile_otp.otp_verify_resend();
        }
    @Test (priority=8)
    public void testcase8(){
        // Select language for multi-select dropdown
        Select select_language = new Select(driver.findElement(By.id("language[]")));
        select_language.selectByIndex(1);
        select_language.selectByIndex(2);
    }
  @BeforeTest
  public void beforeTest() {
      System.setProperty("webdriver.firefox.bin", "C://Program Files (x86)/Mozilla Firefox/firefox.exe");
      driver = new FirefoxDriver();
      driver.get(Constants.WEBSITE_URL);
      driver.manage().window().maximize();
      String title = driver.getTitle();
      System.out.println("Page title is : " + title);
      }

  @AfterTest
  public void afterTest() {
      driver.manage().deleteAllCookies();
      driver.manage().deleteCookie((Cookie) delete_cookies);
      System.out.println(delete_cookies);
       }
  public void getscreenshot() throws Exception{
      File scrFile = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
      FileUtils.copyFile(scrFile, new File("D://screenshot.png") );
  }
  public void otp_confirmation(){
    driver.findElement(By.id("phone")).sendKeys("9958833582");
      driver.findElement(By.id("btn_verify")).click();
      driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
      WebElement otp_value = driver.findElement(By.xpath("//*[@id='verifyOTP_register']//*[@id='otp']"));
      otp_value.sendKeys(Constants.MOBILE_OTP);
    
  }
}
